/*
 * Tweek
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    public class ConfiguraitonApiController : ControllerBase
    { 
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Get tweek key value</remarks>
        /// <param name="keyName">Context ids</param>
        /// <param name="_params"></param>
        /// <param name="include">Include additional keys</param>
        /// <param name="flatten">Return flat key/value JSON (no nesting)</param>
        /// <response code="200">Success</response>
        /// <response code="400">Invalid Request</response>
        /// <response code="403">Unauthorized</response>
        /// <response code="404">Key not found</response>
        [HttpGet]
        [Route("/api/v2/values")]
        [ValidateModelState]
        [SwaggerOperation("GetValue")]
        public virtual IActionResult GetValue([FromQuery][Required()]string keyName, [FromQuery]Dictionary<string, string> _params, [FromQuery]List<string> include, [FromQuery]bool? flatten)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);


            throw new NotImplementedException();
        }
    }
}
