/*
 * Tweek
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    public class ContextApiController : ControllerBase
    { 
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Delete identity context property</remarks>
        /// <param name="identityType">the type of the identity - for example user</param>
        /// <param name="identityId">the identifier of the identity - for example jaime</param>
        /// <param name="prop">the property to delete, for example age</param>
        /// <response code="200">OK</response>
        [HttpDelete]
        [Route("/api/v2/context/{identityType}/{identityId}/{prop}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteContextProp")]
        public virtual IActionResult DeleteContextProp([FromRoute][Required]string identityType, [FromRoute][Required]string identityId, [FromRoute][Required]string prop)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Get identity context</remarks>
        /// <param name="identityType">the type of the identity - for example user</param>
        /// <param name="identityId">the identifier of the identity - for example jaime</param>
        /// <response code="200">Ok</response>
        [HttpGet]
        [Route("/api/v2/context/{identityType}/{identityId}")]
        [ValidateModelState]
        [SwaggerOperation("GetContext")]
        public virtual IActionResult GetContext([FromRoute][Required]string identityType, [FromRoute][Required]string identityId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Save identity context</remarks>
        /// <param name="identityType">the type of the identity - for example user</param>
        /// <param name="identityId">the identifier of the identity - for example jaime</param>
        /// <response code="200">Ok</response>
        [HttpPost]
        [Route("/api/v2/context/{identityType}/{identityId}")]
        [ValidateModelState]
        [SwaggerOperation("SaveContext")]
        public virtual IActionResult SaveContext([FromRoute][Required]string identityType, [FromRoute][Required]string identityId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);


            throw new NotImplementedException();
        }
    }
}
