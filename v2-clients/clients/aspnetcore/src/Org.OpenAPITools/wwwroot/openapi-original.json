{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "Tweek",
    "license" : {
      "name" : "MIT",
      "url" : "https://github.com/Soluto/tweek/blob/master/LICENSE"
    },
    "version" : "0.1.0"
  },
  "servers" : [ {
    "url" : "/api/v2/"
  } ],
  "paths" : {
    "/values" : {
      "get" : {
        "tags" : [ "configuraiton" ],
        "description" : "Get tweek key value",
        "operationId" : "GetValue",
        "parameters" : [ {
          "name" : "params",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "keyName",
          "in" : "query",
          "description" : "Context ids",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$include",
          "in" : "query",
          "description" : "Include additional keys",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "$flatten",
          "in" : "query",
          "description" : "Return flat key/value JSON (no nesting)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Invalid Request"
          },
          "403" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Key not found"
          }
        }
      }
    },
    "/context/{identityType}/{identityId}" : {
      "get" : {
        "tags" : [ "context" ],
        "description" : "Get identity context",
        "operationId" : "GetContext",
        "parameters" : [ {
          "name" : "identityType",
          "in" : "path",
          "description" : "the type of the identity - for example user",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "identityId",
          "in" : "path",
          "description" : "the identifier of the identity - for example jaime",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok"
          }
        }
      },
      "post" : {
        "tags" : [ "context" ],
        "description" : "Save identity context",
        "operationId" : "SaveContext",
        "parameters" : [ {
          "name" : "identityType",
          "in" : "path",
          "description" : "the type of the identity - for example user",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "identityId",
          "in" : "path",
          "description" : "the identifier of the identity - for example jaime",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok"
          }
        }
      }
    },
    "/context/{identityType}/{identityId}/{prop}" : {
      "delete" : {
        "tags" : [ "context" ],
        "description" : "Delete identity context property",
        "operationId" : "DeleteContextProp",
        "parameters" : [ {
          "name" : "identityType",
          "in" : "path",
          "description" : "the type of the identity - for example user",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "identityId",
          "in" : "path",
          "description" : "the identifier of the identity - for example jaime",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "prop",
          "in" : "path",
          "description" : "the property to delete, for example age",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      }
    },
    "/keys" : {
      "get" : {
        "tags" : [ "keys" ],
        "operationId" : "KeysGetKey",
        "parameters" : [ {
          "name" : "keyPath",
          "in" : "query",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "revision",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "keys" ],
        "description" : "Save Key",
        "operationId" : "CreateKey",
        "parameters" : [ {
          "name" : "keyPath",
          "in" : "query",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "author.name",
          "in" : "query",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "author.email",
          "in" : "query",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/KeyUpdateModel"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "text/html" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "keys" ],
        "operationId" : "KeysDeleteKey",
        "parameters" : [ {
          "name" : "keyPath",
          "in" : "query",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "author.name",
          "in" : "query",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "author.email",
          "in" : "query",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "text/html" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/tags" : {
      "get" : {
        "tags" : [ "tags" ],
        "description" : "Get all tags",
        "operationId" : "TagsGet",
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "tags" ],
        "description" : "Save tags",
        "operationId" : "SaveTag",
        "requestBody" : {
          "description" : "The tags that need saving",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "No content"
          }
        }
      }
    },
    "/schemas" : {
      "get" : {
        "tags" : [ "schema" ],
        "description" : "Get query",
        "operationId" : "GetSchemas",
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/schemas/{identityType}" : {
      "post" : {
        "tags" : [ "schema" ],
        "description" : "Add identity",
        "operationId" : "SchemaAddIdentity",
        "parameters" : [ {
          "name" : "identityType",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "author.name",
          "in" : "query",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "author.email",
          "in" : "query",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "text/html" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "schema" ],
        "description" : "Delete Schema",
        "operationId" : "DeleteIdentity",
        "parameters" : [ {
          "name" : "identityType",
          "in" : "path",
          "description" : "The type of the identity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "author.name",
          "in" : "query",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "author.email",
          "in" : "query",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "text/html" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "schema" ],
        "description" : "Update identity",
        "operationId" : "SchemaPatchIdentity",
        "parameters" : [ {
          "name" : "identityType",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "author.name",
          "in" : "query",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "author.email",
          "in" : "query",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/Patch"
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "text/html" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/manifests" : {
      "get" : {
        "tags" : [ "manifest" ],
        "description" : "Get Manifests",
        "operationId" : "GetManifests",
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/suggestions" : {
      "get" : {
        "tags" : [ "suggestions" ],
        "description" : "Get Suggestions",
        "operationId" : "GetSuggestions",
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/search" : {
      "get" : {
        "tags" : [ "search" ],
        "description" : "Search",
        "operationId" : "Search",
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/dependents" : {
      "get" : {
        "tags" : [ "dependent" ],
        "description" : "Get Dependents",
        "operationId" : "GetDependents",
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/revision-history" : {
      "get" : {
        "tags" : [ "revision-history" ],
        "description" : "Get Revision History",
        "operationId" : "GetRevisionHistory",
        "parameters" : [ {
          "name" : "keyPath",
          "in" : "query",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "since",
          "in" : "query",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/policies" : {
      "get" : {
        "tags" : [ "policy" ],
        "description" : "Get Policies",
        "operationId" : "GetPolicies",
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "policy" ],
        "description" : "Replace Policy",
        "operationId" : "ReplacePolicy",
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      },
      "patch" : {
        "tags" : [ "policy" ],
        "description" : "Update Policy",
        "operationId" : "UpdatePolicy",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/Patch"
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      }
    },
    "/apps" : {
      "post" : {
        "tags" : [ "apps" ],
        "operationId" : "AppsCreateApp",
        "parameters" : [ {
          "name" : "author.name",
          "in" : "query",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "author.email",
          "in" : "query",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppCreationRequestModel"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppCreationResponseModel"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "PatchOperation" : {
        "type" : "object",
        "properties" : {
          "op" : {
            "type" : "string"
          },
          "path" : {
            "type" : "string"
          },
          "value" : {
            "type" : "object"
          }
        }
      },
      "Patch" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/PatchOperation"
        }
      },
      "KeyUpdateModel" : {
        "required" : [ "implementation", "manifest" ],
        "type" : "object",
        "properties" : {
          "implementation" : {
            "type" : "object"
          },
          "manifest" : {
            "type" : "object"
          }
        },
        "example" : {
          "manifest" : "{}",
          "implementation" : "{}"
        }
      },
      "AppCreationResponseModel" : {
        "required" : [ "appId", "appSecret" ],
        "type" : "object",
        "properties" : {
          "appId" : {
            "type" : "string"
          },
          "appSecret" : {
            "type" : "string"
          }
        },
        "example" : {
          "appId" : "appId",
          "appSecret" : "appSecret"
        }
      },
      "AppCreationRequestModel" : {
        "required" : [ "name", "permissions" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "permissions" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "example" : {
          "permissions" : [ "permissions", "permissions" ],
          "name" : "name"
        }
      }
    },
    "requestBodies" : {
      "Patch" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Patch"
            }
          }
        },
        "required" : true
      }
    }
  }
}
